buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
}

plugins {
    // Here we define all plugins that are used by subprojects and specify the version for external ones

    id 'idea'

    id 'maven'
    id 'maven-publish'

    id 'java'
    id 'java-library' // needed to make sure that transitive deps have 'compile' scope

    id 'com.jfrog.bintray' version '1.8.3'
}

import java.text.SimpleDateFormat

def globalVersion = new Version("1.0.0-SNAPSHOT")

class Version {
    String originalVersion
    String thisVersion
    String status
    Date buildTime

    Version(String versionValue) {
        buildTime = new Date()
        originalVersion = versionValue
        if (originalVersion.endsWith('-SNAPSHOT')) {
            status = 'integration'
            thisVersion = originalVersion.substring(0, originalVersion.length() - 'SNAPSHOT'.length()) + getTimestamp()
        } else {
            status = 'release'
            thisVersion = versionValue
        }
    }

    String getTimestamp() {
        // Convert local file timestamp to UTC
        def format = new SimpleDateFormat('yyyyMMddHHmmss')
        format.setCalendar(Calendar.getInstance(TimeZone.getTimeZone('UTC')))
        return format.format(buildTime)
    }

    String toString() {
        thisVersion
    }
}


subprojects { project ->
    repositories {
        mavenCentral()
        jcenter()
    }

    apply plugin: 'idea'

    apply plugin: 'maven'
    apply plugin: 'maven-publish'

    apply plugin: 'java'
    apply plugin: 'java-library' // needed to make sure that transitive deps have 'compile' scope
    apply plugin: 'com.jfrog.bintray'

    group='com.commercetools'
    version = System.getProperty('publish') ? globalVersion : currentVersion

    bintray {
        user = System.getenv('CTP_BINTRAY_USER')
        key = System.getenv('CTP_BINTRAY_KEY')
        publications = [ 'Maven' ]

        publish = true

        pkg {
            repo = 'maven'
            name = 'commercetools-java-sdks'
            userOrg = 'commercetools'
            licenses = ['MIT']
            vcsUrl = 'https://github.com/commercetools/commercetools-java-sdks'
        }
    }
    
    task sourcesJar(type: Jar) {
        archiveClassifier = 'sources'
        from sourceSets.main.allJava
    }

    task javadocJar(type: Jar) {
        archiveClassifier = 'javadoc'
        from javadoc.destinationDir
    }
    
    javadoc {
        source = sourceSets.main.allJava
        classpath = configurations.compileClasspath

        options {
            setMemberLevel JavadocMemberLevel.PUBLIC
            setAuthor false

            links "https://docs.oracle.com/javase/8/docs/api/"
        }
    }
    
    ext {
        buildInfoPath = "build/generated/src/main/java/io/vrap/rmf/base/client/"
        buildInfoPackage = "io.vrap.rmf.base.client"
    }

    sourceCompatibility = 1.8
}
